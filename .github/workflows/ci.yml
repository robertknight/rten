name: CI
on:
  pull_request:
  push:
    branches:
    - 'main'
    - 'ci/**'
jobs:
  ci:
    strategy:
      matrix:
        # The macOS build tests Arm and macOS-specific code paths.
        # The Linux build tests everything else (x64, wasm, Python ...)
        os: [ubuntu-latest, macos-14, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Rust WASM targets
      run: |
        rustup target add wasm32-unknown-unknown
        rustup target add wasm32-wasip1
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Install wasmtime
      run: |
        mkdir -p ~/.wasmtime
        curl -L https://github.com/bytecodealliance/wasmtime/releases/download/v29.0.1/wasmtime-v29.0.1-x86_64-linux.tar.xz | tar xf - --xz -C ~/.wasmtime --strip-components=1
        echo "$HOME/.wasmtime" >> "$GITHUB_PATH"
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Install Rust nightly toolchain
      run: rustup toolchain install nightly
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Install Rust x86_64-apple-darwin target
      run: rustup target add x86_64-apple-darwin
      if: ${{ matrix.os == 'macos-14' }}
    - name: Query Rust version
      run: |
        rustc --version
        cargo --version
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/
          target/
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install wasm-bindgen
      # nb. wasm-bindgen-cli version must match `wasm-bindgen` version in Cargo.lock
      run: cargo install wasm-bindgen-cli --version 0.2.100
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Build
      run: cargo build
    - name: Test
      run: make test
    # We compile AVX-512 in CI but don't run tests as GitHub Actions' default
    # runners don't support it yet (https://github.com/actions/runner/issues/1069).
    - name: Build (AVX-512)
      run: cargo +nightly check -p rten --features avx512
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Build (WASM)
      run: make wasm
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Test (WASM)
      run: |
        make wasm-test wasm-test-simd
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Build (Intel macOS)
      run: cargo check --workspace --target x86_64-apple-darwin
      if: ${{ matrix.os == 'macos-14' }}
    - name: Lint
      run: |
        make checkformatting
        make lint
    - name: Docs
      run: |
        make docs
    - name: Setup Python
      run: |
        python -m venv .venv
        .venv/bin/pip install --upgrade pip
      if: ${{ matrix.os == 'ubuntu-latest' }}
    - name: Python Lint
      run: |
        source .venv/bin/activate
        cd rten-convert
        pip install -e .
        pip install -r requirements.dev.txt
        make check
      if: ${{ matrix.os == 'ubuntu-latest' }}
