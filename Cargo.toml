[workspace]
members = [
  ".",
  "rten-base",
  "rten-cli",
  "rten-gemm",
  "rten-generate",
  "rten-imageio",
  "rten-imageproc",
  "rten-model-file",
  "rten-onnx",
  "rten-simd",
  "rten-tensor",
  "rten-text",
  "rten-vecmath",

  # Example crates. These are not published.
  "rten-examples",

  # Development crates. These are not published.
  "rten-bench",
  "rten-testing",
]
default-members = [
  ".",
  "rten-imageproc",
  "rten-tensor",
  "rten-text"
]

[workspace.dependencies]
flatbuffers = "24.3.25"
image = { version = "0.25.1", default-features = false, features = ["png", "jpeg", "webp"] }
rayon = "1.7.0"
rustfft = { version = "6.4.0" }
serde = { version = "1.0.202" }
serde_json = { version = "1.0.117" }
typeid = "1.0.3"

[package]
name = "rten"
version = "0.23.0"
edition = "2024"
authors = ["Robert Knight"]
description = "Machine learning runtime"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/robertknight/rten"
repository = "https://github.com/robertknight/rten"
resolver = "2"
include = ["/src", "/CHANGELOG.md", "/README.md"]
rust-version = "1.89.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
flatbuffers = { workspace = true, optional = true }
smallvec = { version = "1.10.0", features = ["union", "const_generics", "const_new"] }
rten-base = { path = "./rten-base", version = "0.23.0" }
rten-gemm = { path = "./rten-gemm", version = "0.23.0" }
rten-model-file = { path = "./rten-model-file", version = "0.23.0", optional = true }
rten-onnx = { path = "./rten-onnx", version = "0.23.0", optional = true }
rten-tensor = { path = "./rten-tensor", version = "0.23.0" }
rten-vecmath = { path = "./rten-vecmath", version = "0.23.0" }
rten-simd = { path = "./rten-simd", version = "0.23.0" }
fastrand = { version = "2.0.2", optional = true }
fastrand-contrib = { version = "0.1.0", optional = true }
rayon = { workspace = true }
rustc-hash = "2.0.0"
rustfft = { workspace = true, optional = true }
memmap2 = { version = "0.9.4", optional = true }
num_cpus = "1.16.0"
typeid = { workspace = true}

[dev-dependencies]
libm = "0.2.6"
rten-bench = { path = "./rten-bench" }
rten-testing = { path = "./rten-testing" }
serde_json = { workspace = true }

[lib]
crate-type = ["lib", "cdylib"]

[features]
default = ["onnx_format", "rten_format"]

# Enable all features that affect supported operators
all-ops = ["fft", "random"]
# Enables FFT operators (DFT, STFT etc.)
fft = ["dep:rustfft"]
# Enable loading models using memory mapping
mmap = ["dep:memmap2"]
# Enable support for loading .onnx models
onnx_format = ["dep:rten-onnx"]
# Generate WebAssembly API using wasm-bindgen.
wasm_api = []
# Enable operators that generate random numbers.
random = ["dep:fastrand", "dep:fastrand-contrib"]
# Enable support for loading .rten models
rten_format = ["dep:flatbuffers", "dep:rten-model-file"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.100"

[lints.clippy]
# `assert!(const)` effectively used as a static assert, which compiler will
# optimize away.
assertions_on_constants = "allow"
# Clippy frequently suggests to replace for loops with const bounds (often used
# in performance-critical loops) with iterators, which is more verbose and
# potentially less efficient.
needless_range_loop = "allow"
too_many_arguments = "allow"
manual_repeat_n = "allow"  # TODO - Address existing failures
uninlined_format_args = "allow"

[package.metadata.docs.rs]
# These features should match the features enabled by `make docs`.
features = [
  "fft",
  "mmap",
  "random",
]
